<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArchiveDamagedError" xml:space="preserve">
    <value>Package file is missing, damaged or incorrect</value>
  </data>
  <data name="CompletedSuccessfully" xml:space="preserve">
    <value>Operation completed successfully</value>
  </data>
  <data name="CompletedUnsuccessfully" xml:space="preserve">
    <value>Operation completed unsuccessfully</value>
  </data>
  <data name="CorrectPackage" xml:space="preserve">
    <value>Your deployment package is correct and up to date</value>
  </data>
  <data name="DisclaimerMainText" xml:space="preserve">
    <value>You can get more info about this project $here$.

Also you can try other Lab projects. Use tray icon and “App about” option</value>
  </data>
  <data name="FilesAccessError" xml:space="preserve">
    <value>Cannot access one or more source file(s)</value>
  </data>
  <data name="FilesCreationError" xml:space="preserve">
    <value>Cannot create or access one or more file(s) or directory(ies)</value>
  </data>
  <data name="FilesSizeError" xml:space="preserve">
    <value>One or more source file(s) is/are too large</value>
  </data>
  <data name="IncorrectPackage" xml:space="preserve">
    <value>Your deployment package is not original! We strongly recommend against using it!

Please, launch this manager again and download the original package</value>
  </data>
  <data name="InstallRadioText_Main" xml:space="preserve">
    <value>Install: the app installation or recovery</value>
  </data>
  <data name="InstallRadioText_Update" xml:space="preserve">
    <value>Install: the app update</value>
  </data>
  <data name="ExitMessage" xml:space="preserve">
    <value>Do you want to interrupt operation?</value>
  </data>
  <data name="LogCreationError" xml:space="preserve">
    <value>Failed to create installation log</value>
  </data>
  <data name="ModDBIsNotFullyAvailable" xml:space="preserve">
    <value>The updates server is busy now. Try again later</value>
  </data>
  <data name="ModDBIsUnavailable" xml:space="preserve">
    <value>The updates server is unavailable now. Try again later</value>
  </data>
  <data name="ModeLabelText_Main" xml:space="preserve">
    <value>Select the deployment mode:</value>
  </data>
  <data name="ModPath" xml:space="preserve">
    <value>App deployment path:</value>
  </data>
  <data name="OperationInterrupted" xml:space="preserve">
    <value>Operation interrupted by user</value>
  </data>
  <data name="PackageChecking" xml:space="preserve">
    <value>Checking the deployment package. Please, wait...</value>
  </data>
  <data name="PathChanged" xml:space="preserve">
    <value>This is a stand-alone application. No pre-installed software is required for work.

Therefore, it is strongly recommended to keep the suggested installation path.

If possible, don’t overwrite or supplement existing installations. Deployment module can handle this case (backup and restore original files). But it cannot deal with unforeseen consequences.

Continue with specified path?</value>
  </data>
  <data name="PathDoesntExist" xml:space="preserve">
    <value>The specified directory doesn’t exist.

You may be trying to update or uninstall a product that has never been installed or has already been removed</value>
  </data>
  <data name="ReadyMessage1" xml:space="preserve">
    <value>We’re ready for the </value>
  </data>
  <data name="ReadyMessage2_Install" xml:space="preserve">
    <value>application deployment at
“{0:S}”</value>
  </data>
  <data name="ReadyMessage2_Rebuild" xml:space="preserve">
    <value>package rebuilding.</value>
  </data>
  <data name="ReadyMessage2_Uninstall" xml:space="preserve">
    <value>remove of the application from
“{0:S}”</value>
  </data>
  <data name="ReadyMessage2_Update" xml:space="preserve">
    <value>update of the application at
“{0:S}”</value>
  </data>
  <data name="ReadyMessage3" xml:space="preserve">
    <value>
Press “Next” to continue</value>
  </data>
  <data name="RegistryKeyNotFound" xml:space="preserve">
    <value>The app deployment path not found in registry.

Most likely this product has not been installed on this PC before. If this is not the case, use “Restore package’s deployment path” option in tray icon’s menu</value>
  </data>
  <data name="SpecifyModPath" xml:space="preserve">
    <value>Specify the deployment path:</value>
  </data>
  <data name="UninstallRadioText" xml:space="preserve">
    <value>Uninstall: the app uninstallation</value>
  </data>
  <data name="UpdateMessage1_Update" xml:space="preserve">
    <value>Update to v {0:S}</value>
  </data>
  <data name="UpdateMessage2" xml:space="preserve">
    <value> available for download.

Launch this manager again to download it</value>
  </data>
  <data name="UpdatesChecking" xml:space="preserve">
    <value>Checking for updates...</value>
  </data>
  <data name="VersionUnavailable" xml:space="preserve">
    <value>&lt;unavailable&gt;</value>
  </data>
  <data name="PathRestoreText" xml:space="preserve">
    <value>This function will restore registry entry required by deployment tool. You must specify correct path to application’s installation directory in the next window (f. e., {0:S}\{1:S}\).

NOTE: if you’ll set incorrect path, updater and installer may damage valuable files!</value>
  </data>
  <data name="IconMenuShowAbout" xml:space="preserve">
    <value>Actual package’s version info</value>
  </data>
  <data name="IconMenuWebpage" xml:space="preserve">
    <value>Open package’s webpage...</value>
  </data>
  <data name="PackageSelectorForm_Label01" xml:space="preserve">
    <value>Deployment packages manager</value>
  </data>
  <data name="PackagesListUnavailable" xml:space="preserve">
    <value>The list of deployment packages is unavailable. Check your internet connection and try again.

Retry the list downloading?</value>
  </data>
  <data name="PackagesListChecking" xml:space="preserve">
    <value>Downloading the packages list...</value>
  </data>
  <data name="PackageDownload" xml:space="preserve">
    <value>Downloading the deployment package:
</value>
  </data>
  <data name="PackageFailure" xml:space="preserve">
    <value>Failed to download the deployment package. Check your internet connection</value>
  </data>
  <data name="PackageSuccess" xml:space="preserve">
    <value>Success!</value>
  </data>
  <data name="PackageUnzipFailure" xml:space="preserve">
    <value>Cannot unpack the downloaded archive automatically. Open it for manual extraction?</value>
  </data>
  <data name="IconAbout" xml:space="preserve">
    <value>About the {0:S}...</value>
  </data>
  <data name="PackageSelectorForm_AbortButton" xml:space="preserve">
    <value>&amp;Deploy ▷</value>
  </data>
  <data name="PackageSelectorForm_ListOfProjects" xml:space="preserve">
    <value>Packages &amp;list</value>
  </data>
  <data name="LanguageChanged" xml:space="preserve">
    <value>Interface language will be changed when processing the next package</value>
  </data>
  <data name="IconChangeLanguage" xml:space="preserve">
    <value>Interface language</value>
  </data>
  <data name="IconRestorePath" xml:space="preserve">
    <value>Restore package’s deployment path</value>
  </data>
  <data name="IconRegisterExt" xml:space="preserve">
    <value>Register file associations</value>
  </data>
  <data name="UpdatableMessage" xml:space="preserve">
    <value> (update)</value>
  </data>
  <data name="ReqMessageFail" xml:space="preserve">
    <value>Failed to download {0:S}.

If this product is already installed, no further action is required. Otherwise, the app may not work properly</value>
  </data>
  <data name="ReqMessageDefault" xml:space="preserve">
    <value>This app requires the following prerequisites to work:
{0:S}
If app starts properly, you don’t need to do anything here. Otherwise, press “Go to” button to open their webpages for manual downloading</value>
  </data>
  <data name="PackageSelectorForm_ClearCache" xml:space="preserve">
    <value>Clear cac&amp;he</value>
  </data>
  <data name="ClearCacheMessage" xml:space="preserve">
    <value>All previously downloaded packages will be removed. Deployed apps will not be affected. Continue?

Do you want to save a cache of package descriptions? When deleted, they will be reloaded at the next start</value>
  </data>
  <data name="UninstScriptNotCreated" xml:space="preserve">
    <value>Failed to create a script to remove the product. The deployment package will be required for product uninstallation</value>
  </data>
  <data name="PackageSelectorForm_UpdateLists" xml:space="preserve">
    <value>Upd&amp;ate lists</value>
  </data>
  <data name="DisclaimerMainTextPre" xml:space="preserve">
    <value>Right-click tray icon for details and package info. For continue deployment press “Next” button.</value>
  </data>
  <data name="AppIsNotClosed" xml:space="preserve">
    <value>The application being updated / deleted is running. Finish this app and try again</value>
  </data>
  <data name="KillProcessFlagText" xml:space="preserve">
    <value>Stop application if it’s running</value>
  </data>
  <data name="StartProcessFlagText" xml:space="preserve">
    <value>Start application after completion</value>
  </data>
  <data name="PackageSelectorForm_BAbout" xml:space="preserve">
    <value>A&amp;bout the app</value>
  </data>
  <data name="CloseOnSuccessFlagText" xml:space="preserve">
    <value>Exit if completed successfully</value>
  </data>
  <data name="dpdfile" xml:space="preserve">
    <value>Package deinstallation script</value>
  </data>
  <data name="PSF_NewPackage" xml:space="preserve">
    <value>[new]</value>
  </data>
  <data name="PSF_NoInfo" xml:space="preserve">
    <value>[no info]</value>
  </data>
  <data name="PSF_TableHeader00" xml:space="preserve">
    <value>Deployment</value>
  </data>
  <data name="PSF_TableHeader01" xml:space="preserve">
    <value>Package name</value>
  </data>
  <data name="PSF_TableHeader02" xml:space="preserve">
    <value>Act. ver.</value>
  </data>
  <data name="PSF_TableHeader03" xml:space="preserve">
    <value>Inst. ver.</value>
  </data>
  <data name="PSF_TableHeader04" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="AllowDesktopShortcutsFlagText" xml:space="preserve">
    <value>Need shortcuts on the desktop</value>
  </data>
  <data name="RequiredUpdate" xml:space="preserve">
    <value>Necessary update for the deployment module</value>
  </data>
  <data name="PackageSelectorForm_AllPackagesRadio" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="PackageSelectorForm_NewPackagesRadio" xml:space="preserve">
    <value>Only new</value>
  </data>
  <data name="PackageSelectorForm_UpdatablePackagesRadio" xml:space="preserve">
    <value>Only updates</value>
  </data>
  <data name="RegistryKeyNotFoundAllow" xml:space="preserve">
    <value>The app deployment path not found in registry.

The app will use default path for this product. If it’s not correct, use “Restore package’s deployment path” option in tray icon’s menu</value>
  </data>
  <data name="dpfile" xml:space="preserve">
    <value>Unified deployment package</value>
  </data>
  <data name="AdditionalButton" xml:space="preserve">
    <value>&amp;Go to</value>
  </data>
  <data name="ProtocolCallFailure" xml:space="preserve">
    <value>Specified package ({0:S}) not found on the updates server</value>
  </data>
  <data name="dpprotocol" xml:space="preserve">
    <value>URL: Deployment packages processing protocol</value>
  </data>
  <data name="NoPackagesSelected" xml:space="preserve">
    <value>No packages selected for deployment</value>
  </data>
  <data name="PackagesListAlternative" xml:space="preserve">
    <value>Downloading the alternative packages list...</value>
  </data>
  <data name="PackageSelectorForm_DeployedPackagesRadio" xml:space="preserve">
    <value>Only deployed</value>
  </data>
  <data name="IconLastServerMessages" xml:space="preserve">
    <value>Server messages</value>
  </data>
  <data name="HasNoUpdates" xml:space="preserve">
    <value>All previously deployed packages are up to date</value>
  </data>
  <data name="HasUpdates" xml:space="preserve">
    <value>Updates are available for previously deployed packages.

Updates are highlighted in yellow in the packages list. At the bottom of the window, filtering is also available on the basis of “updates only”</value>
  </data>
  <data name="AllowMenuShortcutsFlagText" xml:space="preserve">
    <value>Need shortcuts in the Start menu</value>
  </data>
  <data name="VersionLine" xml:space="preserve">
    <value>•  App version: {0:S}  •  Package version: {1:S}  •</value>
  </data>
  <data name="ReqMessageFirst" xml:space="preserve">
    <value>This app requires the following prerequisites to work:
{0:S}
If possible, they will be installed automatically in the next step. Otherwise, their web pages will be opened with manual download option.

* Opened web pages that don’t offer automatic download of installation packages are for informational purposes only</value>
  </data>
  <data name="PSF_Context00" xml:space="preserve">
    <value>More info</value>
  </data>
  <data name="PSF_Context01" xml:space="preserve">
    <value>Deploy / remove</value>
  </data>
  <data name="PSF_Context02" xml:space="preserve">
    <value>Fast deployment</value>
  </data>
  <data name="PSF_Default" xml:space="preserve">
    <value>[normal]</value>
  </data>
  <data name="PSF_Fast" xml:space="preserve">
    <value>[fast]</value>
  </data>
  <data name="PSF_URLAvailable" xml:space="preserve">
    <value>

Do you want to open the webpage with additional project info?</value>
  </data>
  <data name="PSF_Context07" xml:space="preserve">
    <value>Deselect all</value>
  </data>
  <data name="PSF_Context03" xml:space="preserve">
    <value>Deselect</value>
  </data>
  <data name="PSF_Context06" xml:space="preserve">
    <value>Deploy all updates</value>
  </data>
  <data name="dptfile" xml:space="preserve">
    <value>DPArray auxiliary script</value>
  </data>
  <data name="AllowStartupShortcutsFlagText" xml:space="preserve">
    <value>Run at system startup</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>You are welcomed by </value>
  </data>
  <data name="LauncherIsRunningMessage" xml:space="preserve">
    <value>The DPArray mini-launcher is still running. Close it to continue the deployment</value>
  </data>
  <data name="PSF_ActualMessage" xml:space="preserve">
    <value>This package is already deployed and up-to-date</value>
  </data>
  <data name="PSF_NewPackageMessage" xml:space="preserve">
    <value>Package is new for this PC</value>
  </data>
  <data name="PSF_UpdatableMessage" xml:space="preserve">
    <value>This package is an update for the previously deployed one</value>
  </data>
  <data name="AddAppsForm_Message" xml:space="preserve">
    <value>Enter a short name and path to the application or file that you want to add to the mini-launcher, then try again</value>
  </data>
  <data name="AddAppsForm_NameLabel" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="AddAppsForm_OFF" xml:space="preserve">
    <value>All files (*.*)|*.*</value>
  </data>
  <data name="AddAppsForm_OFN" xml:space="preserve">
    <value>Select application or file for quick start</value>
  </data>
  <data name="AddAppsForm_PathLabel" xml:space="preserve">
    <value>Path:</value>
  </data>
  <data name="HasServerAlert" xml:space="preserve">
    <value>.
Server sent a new message</value>
  </data>
  <data name="DeinstallationScriptBuilding" xml:space="preserve">
    <value>Creating the deinstallation script...</value>
  </data>
  <data name="AutostartParameters" xml:space="preserve">
    <value>Autostart parameters</value>
  </data>
  <data name="AddAppsForm_ColorLabel" xml:space="preserve">
    <value>Color:</value>
  </data>
</root>